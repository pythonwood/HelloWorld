This my first git src manage project 

git config --global --user.name "pythonwood"
git config --global --user.email "582223837@qq.com

# git config --global --list	 #list all
# git config --global color.ui "auto"

mk HelloWorld
cd HelloWorld
git init	#make .git
git add .
git status	#which is changed
git commit -m "add commit: add something" \
    -m "This allows for a more semantic document."
#git log -1  #显示最后一次

###############################################################
二次开发：2013-10-29
###################################################################
# 开心发现，Ubuntu极点五笔切换右边Alt是快捷键!之前用Ctrl+Alt或Ctrl+Space都不方便，比右shift临时换输入法更好！
###################################################################

git clone git@github.com:/pythonwood/HelloWorld.git
# 
git commit -amend # 非常有用，再次提交一次，覆盖上一次的。
#  比较记忆 重要！ 易混淆！
git add & git reset
git commit & git checkout

rebase 分支衍合测试：
c1 -> C4  -> C7                master
 \
   C2  ->  C3            branch20131029
     \
       C5  ->  C6        branch2

C1: clear workspace and ready
C4: 修改了.gitignore
C5: 修改了HelloWorld
C6: 增加了bottle.py
C7: 修改了README

after rebase :
git checkout branch2
git rebase --onto master branch20131029  branch2
git checkout master
git merge branch2
git rebase master branch20131029
git checkout master
git merge branch20131029
git branch -v
# git branch -d branch20131029  branch2

C1 -> C4 -> C7 -> C5' -> C6' -> C2' -> C3'

then commit again in master for README:

#################################################
20131029 for merge in merge1

创建分支合并后不删除分支，到分支上再开发了一下。
-for merge conflect:1-



